name: Release

on:
  workflow_dispatch:
  push:
    tags: 
      - 'V*' # Push events to matching V*
    
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TAG: $(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
        
    steps:
    - uses: actions/checkout@v2
      
    - name: Display files
      run: ls -aR

    - name: Python package
      uses: ./.github/actions/python_package  # use local workflow
      
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        path: ./dist/

    - name: Display structure of downloaded files
      run: ls -aR
      working-directory: ./dist/

    - name: Set vars
      id: vars
      run: |
        filename=$(find ./dist/ -type f \( -iname \*.zip \))
        echo $filename
        echo "::set-output name=filepath::$filename"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $TAG
        release_name: Release $TAG
        draft: true
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`.
        asset_path: ${{ steps.vars.outputs.filepath }}
        asset_name: $(basename "${{ steps.vars.outputs.filepath }}")
        asset_content_type: application/zip

